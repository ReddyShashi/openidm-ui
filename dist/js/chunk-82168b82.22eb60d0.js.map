{"version":3,"sources":["webpack:///./src/scss/main.scss?76a5","webpack:///./src/components/OAuthReturn.vue?4fd1","webpack:///src/components/OAuthReturn.vue","webpack:///./src/components/OAuthReturn.vue?c23c","webpack:///./src/components/OAuthReturn.vue"],"names":["module","exports","render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","loadingColor","staticRenderFns","component"],"mappings":";;;;mGACAA,EAAOC,QAAU,CAAC,UAAY,Y,yCCD9B,IAAIC,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,cAAc,CAACE,YAAY,aAAaC,MAAM,CAAC,MAAQ,KAAK,CAACH,EAAG,MAAM,CAACE,YAAY,gBAAgB,CAACF,EAAG,MAAM,CAACE,YAAY,yBAAyB,CAACF,EAAG,gBAAgB,CAACG,MAAM,CAAC,MAAQP,EAAIQ,iBAAiB,QAC3SC,EAAkB,G,sDCoBtB,GACE,KAAF,eACE,WAAF,CACI,gBAAJ,mBAEE,KALF,WAMI,MAAJ,CACM,aAAN,gBAGE,QAVF,WAUI,IACJ,EADA,OAOI,GAAJ,0BACM,EAAN,GAEM,EAAN,yEACQ,GAAR,YACU,IAAV,eACU,EAAV,eAIM,OAAN,kDAEM,KAAN,cACQ,KAAR,kBACQ,OAAR,CACU,YAAV,cACU,aAAV,sBAGA,CACM,EAAN,wEACQ,IAAR,eACA,6BAGQ,OADA,EAAR,kCACA,IACA,IAEM,OAAN,kDAEM,KAAN,gDAGM,IAAN,0BACQ,QAAR,uCACU,sBAAV,OACU,2BAAV,2CAGA,yCAGM,aAAN,6BACM,aAAN,6BAGM,EAAN,oDACA,kBACQ,IAAR,eACA,+CAEQ,aAAR,mCAEQ,IAAR,uBACU,QAAV,CACY,sBAAZ,QACY,wBAAZ,OACY,2BAAZ,EACY,mBAAZ,oBAGQ,EAAR,sCACA,kBAMA,2DACA,wDAEY,EAAZ,6CACc,wBAAd,OACc,2BAAd,EACc,mBAAd,mBAGY,eAAZ,qBACY,eAAZ,0CAIU,EAAV,sCACA,EACc,EAAd,cACgB,KAAhB,UACgB,OAAhB,CACkB,YAAlB,EACkB,eAAlB,KAGA,cACc,EAAd,kBAEc,EAAd,cACgB,KAAhB,kBACgB,OAAhB,CACkB,YAAlB,EACkB,cAAlB,WAMA,kBACU,EAAV,cACY,KAAZ,kBACY,OAAZ,CACc,YAAd,EACc,cAAd,WAKA,mBACQ,EAAR,uBACQ,EAAR,2DC1JqV,I,YCOjVC,EAAY,eACd,EACAX,EACAU,GACA,EACA,KACA,KACA,MAIa,aAAAC,E","file":"js/chunk-82168b82.22eb60d0.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"baseColor\":\"#007bff\"};","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('b-container',{staticClass:\"h-100 px-0\",attrs:{\"fluid\":\"\"}},[_c('div',{staticClass:\"h-100 d-flex\"},[_c('div',{staticClass:\"m-auto fr-center-card\"},[_c('bounce-loader',{attrs:{\"color\":_vm.loadingColor}})],1)])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <b-container fluid class=\"h-100 px-0\">\n        <div class=\"h-100 d-flex\">\n            <div class=\"m-auto fr-center-card\">\n                <bounce-loader :color=\"loadingColor\"></bounce-loader>\n            </div>\n        </div>\n    </b-container>\n</template>\n\n<script>\nimport _ from 'lodash';\nimport styles from '@/scss/main.scss';\nimport { BounceLoader } from 'vue-spinner/dist/vue-spinner.min.js';\n\n/**\n * @description Return page used for oauth provider authentication. Will appropriately redirect a user to login or account claiming.\n *\n * @fires POST identityProviders?_action=handlePostAuth - Generates the token used for continuing the authentication process based off of the returned provider information\n * @fires POST authentication?_action=login - Uses data store token to establish a new user session\n */\nexport default {\n    name: 'OAuth-Return',\n    components: {\n        'bounce-loader': BounceLoader\n    },\n    data () {\n        return {\n            loadingColor: styles.baseColor\n        };\n    },\n    created () {\n        let queryParams;\n\n        /*\n         * This check is for openAM fullstack only. With the return of a special URL #/handleOAuth/\n         * We are given a clientToken that we can directly pass on to accountClaiming / Registration\n        */\n        if (this.$route.params.amData) {\n            queryParams = {};\n\n            _.each(this.$route.params.amData.replace('?', '').split('&'), (param) => {\n                if (param.length > 0) {\n                    let parts = param.split('=');\n                    queryParams[parts[0]] = parts[1];\n                }\n            });\n\n            window.history.pushState('', '', window.location.pathname);\n\n            this.$router.push({\n                name: 'AccountClaiming',\n                params: {\n                    clientToken: queryParams.clientToken,\n                    returnParams: queryParams.returnParams\n                }\n            });\n        } else {\n            queryParams = window.location.search.replace('?', '').split('&').reduce(function (map, item) {\n                let parts = item.split('='),\n                    decodedValue = [decodeURIComponent(parts[1])];\n\n                map[parts[0]] = map[parts[0]] ? map[parts[0]].concat(decodedValue) : decodedValue;\n                return map;\n            }, {});\n\n            window.history.pushState('', '', window.location.pathname);\n\n            this.$root.applicationStore.clearAuthHeadersAction();\n\n            /* istanbul ignore next */\n            const socialInstance = this.getRequestService({\n                    headers: _.extend(this.getAnonymousHeaders(), {\n                        'X-OpenIDM-NoSession': 'true',\n                        'X-OpenIDM-DataStoreToken': localStorage.getItem('dataStoreToken')\n                    })\n                }),\n                linkedProvider = localStorage.getItem('linkedProvider');\n\n            /* istanbul ignore next */\n            localStorage.removeItem('dataStoreToken');\n            localStorage.removeItem('linkedProvider');\n\n            /* istanbul ignore next */\n            socialInstance.post('/identityProviders?_action=handlePostAuth', queryParams)\n                .then((response) => {\n                    let dataStoreToken = response.data.token,\n                        originalToken = localStorage.getItem('accountClaimingToken');\n\n                    localStorage.removeItem('accountClaimingToken');\n\n                    const socialLoginInstance = this.getRequestService({\n                        headers: {\n                            'X-OpenIDM-NoSession': 'false',\n                            'X-OpenIDM-OAuth-Login': 'true',\n                            'X-OpenIDM-DataStoreToken': dataStoreToken,\n                            'X-Requested-With': 'XMLHttpRequest'\n                        }\n                    });\n                    socialLoginInstance.post('/authentication?_action=login')\n                        .then((response) => {\n                            /* If amDataEndpoints exist we know this if fullStack mode.\n                                   We need to set the headers to be used on all this user's authenticated requests.\n                                   Basically re-logging in on every request with a valid am token. We also need to\n                                   grab the logoutUrl so we can use that to kill not only the idm session\n                                   but also the am session. */\n                            if (_.has(this.$root.applicationStore.state, 'amDataEndpoints') &&\n                                this.$root.applicationStore.state.amDataEndpoints !== null\n                            ) {\n                                this.$root.applicationStore.setAuthHeadersAction({\n                                    'X-OpenIDM-OAuth-Login': 'true',\n                                    'X-OpenIDM-DataStoreToken': dataStoreToken,\n                                    'X-Requested-With': 'XMLHttpRequest'\n                                });\n\n                                sessionStorage.setItem('amToken', dataStoreToken);\n                                sessionStorage.setItem('resubmitDataStoreToken', 'true');\n                            }\n\n                            // Check for progressive profiling.\n                            this.progressiveProfileCheck(response, () => {\n                                if (linkedProvider) {\n                                    this.$router.push({\n                                        name: 'Profile',\n                                        params: {\n                                            clientToken: dataStoreToken,\n                                            linkedProvider: linkedProvider\n                                        }\n                                    });\n                                } else if (_.isNull(originalToken)) {\n                                    this.$router.push('/');\n                                } else {\n                                    this.$router.push({\n                                        name: 'AccountClaiming',\n                                        params: {\n                                            clientToken: dataStoreToken,\n                                            originalToken: originalToken\n                                        }\n                                    });\n                                }\n                            });\n                        })\n                        .catch(() => {\n                            this.$router.push({\n                                name: 'AccountClaiming',\n                                params: {\n                                    clientToken: dataStoreToken,\n                                    originalToken: originalToken\n                                }\n                            });\n                        });\n                })\n                .catch((error) => {\n                    this.$router.push('/login');\n                    this.displayNotification('error', error.response.data.message);\n                });\n        }\n    }\n};\n</script>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./OAuthReturn.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./OAuthReturn.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./OAuthReturn.vue?vue&type=template&id=69956c7a&\"\nimport script from \"./OAuthReturn.vue?vue&type=script&lang=js&\"\nexport * from \"./OAuthReturn.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}